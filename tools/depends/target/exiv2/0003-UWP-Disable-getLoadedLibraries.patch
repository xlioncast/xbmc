From 8affb24ed2c704462cf49f8069954acdfe1f8f79 Mon Sep 17 00:00:00 2001
From: Miguel Borges de Freitas <92enen@gmail.com>
Date: Mon, 17 Jun 2024 13:29:29 +0100
Subject: [PATCH] [UWP] Disable getLoadedLibraries

---
 src/version.cpp | 21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

diff --git a/src/version.cpp b/src/version.cpp
index 7e8c0b98a..8dcc11ece 100644
--- a/src/version.cpp
+++ b/src/version.cpp
@@ -122,16 +122,19 @@ static std::vector<std::string> getLoadedLibraries() {
   std::string path;
 
 #if defined(_WIN32) || defined(__CYGWIN__)
-  // enumerate loaded libraries and determine path to executable
-  HMODULE handles[200];
-  DWORD cbNeeded;
-  if (EnumProcessModules(GetCurrentProcess(), handles, static_cast<DWORD>(std::size(handles)), &cbNeeded)) {
-    char szFilename[_MAX_PATH];
-    for (DWORD h = 0; h < cbNeeded / sizeof(handles[0]); h++) {
-      GetModuleFileNameA(handles[h], szFilename, static_cast<DWORD>(std::size(szFilename)));
-      pushPath(szFilename, libs, paths);
-    }
+  #include <winapifamily.h>
+  #if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_APP)
+    // enumerate loaded libraries and determine path to executable
+    HMODULE handles[200];
+    DWORD cbNeeded;
+    if (EnumProcessModules(GetCurrentProcess(), handles, static_cast<DWORD>(std::size(handles)), &cbNeeded)) {
+      char szFilename[_MAX_PATH];
+      for (DWORD h = 0; h < cbNeeded / sizeof(handles[0]); h++) {
+        GetModuleFileNameA(handles[h], szFilename, static_cast<DWORD>(std::size(szFilename)));
+        pushPath(szFilename, libs, paths);
+      }
   }
+  #endif
 #elif defined(__APPLE__)
   // man 3 dyld
   uint32_t count = _dyld_image_count();
-- 
2.39.3 (Apple Git-146)

